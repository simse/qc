name: CI

on: push

jobs:
  test_source_code:
    name: Test source code
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup Golang
        uses: actions/setup-go@v2
        with:
          go-version: "^1.16"

      - name: Run tests
        run: go test

  build:
    name: Build binary
    runs-on: ubuntu-20.04
    needs: test_source_code
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup Golang
        uses: actions/setup-go@v2
        with:
          go-version: "^1.16"

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Build for all platforms
        env:
          VERSION: ${{ steps.get_version.outputs.VERSION }}
        run: bash scripts/cross_compile.sh

      - uses: actions/upload-artifact@v2
        with:
          name: qc
          path: build/

  # test_binary:
  #   name: Test binary
  #   runs-on: ubuntu-20.04
      

  release:
    name: Release qc
    runs-on: ubuntu-20.04
    needs: build
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - uses: actions/download-artifact@v2
        name: Download build artifact
        with:
          name: qc
          path: build/
      
      - name: Release to Github
        uses: softprops/action-gh-release@v1
        with:
          prerelease: false
          files: |
            build/qc-linux-amd64
            build/qc-linux-arm64
            build/qc-darwin-amd64
            build/qc/darwin-arm64
            build/qc-windows-amd64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.get_version.outputs.VERSION }}
     