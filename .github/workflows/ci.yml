name: CI

on:
  push:
    tags:
    - "v*"

jobs:
  test:
    name: Test release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup Golang
        uses: actions/setup-go@v2
        with:
          go-version: "^1.15.5"

      - name: Run tests
        run: go test ./test

  build:
    name: Build all releases
    runs-on: ubuntu-20.04
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup Golang
        uses: actions/setup-go@v2
        with:
          go-version: "^1.15.5"

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Build for Linux (amd64)
        env:
          VERSION: ${{ steps.get_version.outputs.VERSION }}
          GOOS: linux
          GOARCH: amd64
        run: go build -o ./qc-linux-amd64 -ldflags="-X github.com/simse/qc/cmd.Version=${VERSION}" main.go


      - name: Build for macOS (amd64)
        env:
          VERSION: ${{ steps.get_version.outputs.VERSION }}
          GOOS: darwin
          GOARCH: amd64
        run: go build -o ./qc-darwin-amd64 -ldflags="-X github.com/simse/qc/cmd.Version=${VERSION}" main.go

      - name: Build for Windows (amd64)
        env:
          VERSION: ${{ steps.get_version.outputs.VERSION }}
          GOOS: windows
          GOARCH: amd64
        run: go build -o ./qc-windows-amd64.exe -ldflags="-X github.com/simse/qc/cmd.Version=${VERSION}" main.go


      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          files: |
            qc-linux-amd64
            qc-darwin-amd64
            qc-windows-amd64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}