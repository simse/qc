name: CI

on: push

jobs:
  test:
    name: Test release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup Golang
        uses: actions/setup-go@v2
        with:
          go-version: "^1.15.5"

      - name: Run tests
        run: go test ./test

  build:
    name: Build all releases
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019]
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup Golang
        uses: actions/setup-go@v2
        with:
          go-version: "^1.15.5"

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Build for Linux (amd64)
        env:
          VERSION: ${{ steps.get_version.outputs.VERSION }}
          OS: ${{ matrix.os }}
          GOOS: linux
          GOARCH: amd64
        run: go build -o ./qc-${OS}-amd64 -ldflags="-X github.com/simse/qc/cmd.Version=${VERSION}" main.go

      - uses: actions/upload-artifact@v2
        with:
          name: qc-${OS}-amd64
          path: ./qc-${OS}-amd64

      #- name: Release
      #  uses: softprops/action-gh-release@v1
      #  with:
      #    prerelease: true
      #    files: |
      #      qc-linux-amd64
      #      qc-darwin-amd64
      #      qc-windows-amd64.exe
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}